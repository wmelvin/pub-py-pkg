name: Packaging

on:
  - push

jobs:
  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install tox
        run: python -m pip install tox

      - name: run black
        run: tox -e format

  lint:
    name: Run linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install tox
        run: python -m pip install tox

      - name: run flake8
        run: tox -e lint

  typecheck:
    name: Run type checking
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install tox
        run: python -m pip install tox

      - name: run typecheck with mypy
        run: tox -e typecheck

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - version: "3.10"
            toxenv: "py310"
          - version: "3.9"
            toxenv: "py39"

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: ${{ matrix.python.version }}

      - name: Install tox
        run: python -m pip install tox

      - name: Run pytest
        run: tox -e ${{ matrix.python.toxenv }}

  wheels:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019]
        # os: [ubuntu-20.04, windows-2019, macOS-10.15]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheels

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheels/*.whl

  build_dist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4.0.0
        with:
          python-version: "3.10"

      - name: Install build package
        run: python -m pip install build

      - name: Run build tool
        run: python -m build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.tar.gz

  publish:
    name: Publish to PyPI
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs:
      - format
      - lint
      - typecheck
      - test
      - build_dist
      - wheels
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: ./dist/
      
      - uses: pypa/gh-action-pypi-publish@1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
